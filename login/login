from flask import Flask, render_template, request, redirect, url_for, session, flash
import sqlite3
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.secret_key = 'secret-key'  # Replace with a secure random key in production

# ---- DATABASE SETUP ---- #
DATABASE = 'users.db'

def init_db():
    """Create users table if not exists."""
    with sqlite3.connect(DATABASE) as con:
        cur = con.cursor()
        cur.execute('''CREATE TABLE IF NOT EXISTS users (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        email TEXT UNIQUE NOT NULL,
                        password TEXT NOT NULL
                    )''')
        con.commit()

# ---- ROUTES ---- #

# Home Route (Sign-in Page)
@app.route('/', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']

        # Validate user credentials
        with sqlite3.connect(DATABASE) as con:
            cur = con.cursor()
            cur.execute("SELECT * FROM users WHERE email = ?", (email,))
            user = cur.fetchone()
            if user and check_password_hash(user[2], password):
                session['user'] = email
                flash('Login Successful!', 'success')
                return redirect(url_for('dashboard'))
            else:
                flash('Invalid email or password.', 'danger')

    return render_template('signin.html')

# Dashboard Route
@app.route('/dashboard')
def dashboard():
    if 'user' in session:
        return f"Welcome, {session['user']}! This is your dashboard."
    else:
        flash('Please log in first.', 'warning')
        return redirect(url_for('login'))

# Forgot Password Route (Placeholder)
@app.route('/forgot-password')
def forgot_password():
    return "Forgot Password Page - Feature under construction."

# Logout Route
@app.route('/logout')
def logout():
    session.pop('user', None)
    flash('You have been logged out.', 'info')
    return redirect(url_for('login'))

# ---- MAIN ---- #
if __name__ == '__main__':
    init_db()  # Ensure database is initialized
    app.run(debug=True)
